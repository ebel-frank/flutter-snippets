{
  "Scaffold widget snippet": {
    "prefix": "fscaf",
    "body": [
      "Scaffold(",
      "  appBar: AppBar(",
      "    title: Text('${1:Title}'),",
      "  ),",
      "  body: ${2:Container()}${0},",
      ");"
    ],
    "description": "Scaffold widget snippet"
  },
  "Expand widget snippet": {
    "prefix": "fex",
    "body": [
      "Expanded(",
      "  child: ${1:Widget},${0}",
      ")"
    ],
    "description": "Expand widget snippet"
  },
  "Text widget snippet": {
    "prefix": "ftxt",
    "body": [
      "Text('${1:text}'),${0}"
    ],
    "description": "Text widget snippet"
  },
  "Flutter Icon widget snippet": {
    "prefix": "fic",
    "body": [
      "Icon(Icons.${1:clear})${0}"
    ],
    "description": "Flutter Icon widget snippet"
  },
  "Flutter Container widget snippet": {
    "prefix": "fcont",
    "body": [
      "Container(",
      "  child: ${1:Widget}(${0}),",
      ")"
    ],
    "description": "Flutter Container widget snippet"
  },
  "Flutter Center widget snippet": {
    "prefix": "fcent",
    "body": [
      "Center(",
      "  child: ${1:Widget}(${0}),",
      ")"
    ],
    "description": "Flutter Center widget snippet"
  },
  "Flutter Row widget snippet": {
    "prefix": "frow",
    "body": [
      "Row(",
      "  children: <Widget>[${0}],",
      ")"
    ],
    "description": "Flutter Row widget snippet"
  },
  "Flutter Column widget snippet": {
    "prefix": "fcol",
    "body": [
      "Column(",
      "  children: <Widget>[${0}],",
      ")"
    ],
    "description": "Flutter Column widget snippet"
  },
  "Flutter Stack widget snippet": {
    "prefix": "fstk",
    "body": [
      "Stack(",
      "  children: <Widget>[${0}],",
      ")"
    ],
    "description": "Flutter Stack widget snippet"
  },
  "Align widget": {
    "prefix": "falign",
    "body": [
      "Align(",
      "  alignment: Alignment${1},",
      "  child:${2:Widget}",
      "  ),"
    ],
    "description": "Align widget"
  },
  "Flatbutton widget": {
    "prefix": "fflat",
    "body": [
      "FlatButton(",
      "  onPressed: () {${1}},",
      "  child: Text(",
      "    \"${2:Flat Button}\",",
      "  ),",
      "),"
    ],
    "description": "Flatbutton widget"
  },
  "FloatingActionButton widget": {
    "prefix": "fab",
    "body": [
      "FloatingActionButton(",
      "  onPressed: () {${1}},",
      "  child: Icon(Icons.${2:add}),",
      "),"
    ],
    "description": "FloatingActionButton widget"
  },
  "IconButton widget": {
    "prefix": "ficbtn",
    "body": [
      "IconButton(",
      "  onPressed: () {${1}},",
      "  icon: Icon(Icons.${2:add}),",
      "),"
    ],
    "description": "IconButton widget"
  },
  "RaisedButton widget": {
    "prefix": "fraisdbtn",
    "body": [
      "RaisedButton(",
      "  onPressed: () {${1}},",
      "  child: Text(",
      "    \"${2:Raised Button}\",",
      "  ),",
      ")"
    ],
    "description": "RaisedButton widget"
  },
  "GestureDetector widget": {
    "prefix": "fgesdet",
    "body": [
      "GestureDetector(",
      "  onTap: () {${1}},",
      "  child: ${2:Widget},",
      "),"
    ],
    "description": "GestureDetector widget"
  },
  "InkWell widget": {
    "prefix": "fink",
    "body": [
      "InkWell(",
      "  onTap: () {${1}},",
      "  child:${2:Widget}",
      "),"
    ],
    "description": "RaisedButton widget"
  },
  "Drawer widget": {
    "prefix": "fdrawer",
    "body": [
      "Drawer(",
      "  child: ListView(",
      "    children: const <Widget>[${0}],",
      "),  "
    ],
    "description": "Drawer widget"
  },
  "MediaQuery widget": {
    "prefix": "fmeque",
    "body": [
      "MediaQuery.of(context)$0;"
    ],
    "description": "MediaQuery widget"
  },
  "Material Package": {
    "prefix": "impM",
    "body": "import 'package:flutter/material.dart';",
    "description": "Import flutter material package"
  },
  "Cupertino Package": {
    "prefix": "impC",
    "body": "import 'package:flutter/cupertino.dart';",
    "description": "Import Flutter Cupertino package"
  },
  "Services Package": {
    "prefix": "impS",
    "body": "import 'package:flutter/services.dart';",
    "description": "Import Flutter Cupertino package"
  },
  "Foundation Package": {
    "prefix": "impF",
    "body": "import 'package:flutter/foundation.dart';",
    "description": "Import Flutter Cupertino package"
  },
  "HTTP Package": {
    "prefix": "impH",
    "body": "import 'package:http/http.dart'as http;",
    "description": "Import Flutter HTTP package"
  },
  "Creates a screen with text in center": {
    "prefix": "screen",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class Screen extends StatelessWidget {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: Text('App Bar'),",
      "      ),",
      "      body: Center(",
      "        child: Container(",
      "          child: Text('Hello World'),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}",
      ""
    ],
    "description": "Creates a screen with text in center"
  },
  "Device Preview": {
    "prefix": "devprev",
    "body": [
      "import 'package:device_preview/device_preview.dart';",
      "import 'package:flutter/foundation.dart';",
      "import 'package:flutter/material.dart';",
      "",
      "void main() => runApp(",
      "      DevicePreview(",
      "        enabled: !kReleaseMode,",
      "        builder: (context) => MyApp(), // Wrap your app",
      "      ),",
      "    );",
      "",
      "class MyApp extends StatelessWidget {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return MaterialApp(",
      "        debugShowCheckedModeBanner: false,",
      "        builder: DevicePreview.appBuilder,",
      "        title: 'Flutter Demo',",
      "        theme: ThemeData(",
      "          primarySwatch: Colors.blue,",
      "        ),",
      "        home: ${1:HomePage()},",
      "    );",
      "  }",
      "}"
    ],
    "description": "Device Preview"
  },
  "Material App": {
    "prefix": "mateapp",
    "description": "Create a MaterialApp",
    "body": [
      "import 'package:flutter/material.dart';",
      " ",
      "void main() => runApp(MyApp());",
      " ",
      "class MyApp extends StatelessWidget {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return MaterialApp(",
      "      title: 'Material App',",
      "      home: Scaffold(",
      "        appBar: AppBar(",
      "          title: Text('Material App Bar'),",
      "        ),",
      "        body: Center(",
      "          child: Container(",
      "            child: Text('Hello World'),",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}"
    ]
  },
  "Cupertino App": {
    "prefix": "cupeapp",
    "description": "Create a CupertinoApp",
    "body": [
      "import 'package:flutter/cupertino.dart';",
      " ",
      "void main() => runApp(MyApp());",
      " ",
      "class MyApp extends StatelessWidget {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return CupertinoApp(",
      "      title: 'Cupertino App',",
      "      home: CupertinoPageScaffold(",
      "        navigationBar: CupertinoNavigationBar(",
      "          middle: Text('Cupertino App Bar'),",
      "        ),",
      "        child: Center(",
      "          child: Container(",
      "            child: Text('Hello World'),",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}"
    ]
  },
  "Build Method": {
    "prefix": "build",
    "body": [
      "@override",
      "Widget build(BuildContext context) {",
      "  return ${0:};",
      "}"
    ],
    "description": "Describes the part of the user interface represented by this widget."
  },
  "Custom Painter ": {
    "prefix": "customPainter",
    "body": [
      "class ${0:name}Painter extends CustomPainter {",
      "",
      "  @override",
      "  void paint(Canvas canvas, Size size) {",
      "  }",
      "",
      "  @override",
      "  bool shouldRepaint(${0:name}Painter oldDelegate) => false;",
      "",
      "  @override",
      "  bool shouldRebuildSemantics(${0:name}Painter oldDelegate) => false;",
      "}"
    ],
    "description": "Used for creating custom paint"
  },
  "Custom Clipper ": {
    "prefix": "customClipper",
    "body": [
      "class ${0:name}Clipper extends CustomClipper<Path> {",
      "",
      "  @override",
      "  Path getClip(Size size) {",
      "  }",
      "",
      "  @override",
      "  bool shouldReclip(CustomClipper<Path> oldClipper) => false;",
      "}"
    ],
    "description": "Used for creating custom shapes"
  },
  "InitState ": {
    "prefix": "initS",
    "body": [
      "@override",
      "void initState() { ",
      "  super.initState();",
      "  ${0:}",
      "}"
    ],
    "description": "Called when this object is inserted into the tree. The framework will call this method exactly once for each State object it creates."
  },
  "Dispose": {
    "prefix": "dis",
    "body": [
      "@override",
      "void dispose() { ",
      "  ${0:}",
      "  super.dispose();",
      "}"
    ],
    "description": "Called when this object is removed from the tree permanently. The framework calls this method when this State object will never build again."
  }
}